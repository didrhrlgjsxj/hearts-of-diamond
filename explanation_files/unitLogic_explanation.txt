### `unitLogic.js` 파일 기능 설명

이 파일은 게임의 '두뇌'와 같은 역할을 합니다. `main.js`의 게임 루프에서 호출되어, 게임에 존재하는 모든 부대들의 상태를 업데이트하고 상호작용을 처리하는 모든 복잡한 로직을 수행합니다.

---

#### **주요 기능 및 로직 흐름 (`updateUnits` 함수)**

이 파일의 핵심은 `updateUnits` 함수이며, 다음과 같은 순서로 동작합니다.

1.  **상태 초기화**:
    *   매 프레임 시작 시, 모든 부대의 `isInCombat`(전투 중)과 `isEnemyDetected`(적 탐지) 상태를 `false`로 초기화합니다.
    *   이전 프레임의 시각 효과(예광탄 등)를 초기화합니다.

2.  **목표 탐색 및 전투 상태 설정**:
    *   **자동 반격 로직**: 각 중대는 자신이 '측면 공격'을 하는 도중 다른 적에게 공격받고 있는지(`isBeingTargeted`) 확인합니다. 만약 그렇고, 그 공격자가 자신의 사거리 내에 있다면, 다른 모든 판단에 앞서 그 공격자를 우선적인 반격 대상으로 설정합니다.
    *   **일반 목표 탐색**: 자동 반격 대상이 없는 경우, 각 중대는 자신의 교전 범위(`engagementRange`) 내에서 가장 가까운 적 중대를 찾아 잠재적인 공격 목표로 설정합니다.

3.  **실제 공격 및 피해 계산 (턴 기반)**:
    *   위 단계에서 결정된 목표(`target`)를 각 공격자(`attacker`)의 `currentTarget`으로 확정합니다.
    *   **턴 계산**: 각 공격자는 자신의 공격 진행도(`attackProgress`)를 누적시키고, 이 값이 공격 주기(`attackCooldown`)에 도달하면 공격을 수행합니다.
    *   **피해 계산**:
        1.  공격자는 방어자의 `기갑화율(hardness)`과 `장갑(armor)`을 고려하여 유효한 '총 공격력'을 계산합니다.
        2.  공격자의 `화력(firepower)`을 기반으로 '화력 피해'를 계산합니다.
        3.  계산된 두 피해량을 목표 중대의 `takeDamage` 메서드에 전달합니다.
    *   **시각 효과 및 상태 변경**:
        *   공격자와 방어자 모두 `isInCombat` 상태가 `true`로 변경됩니다.
        *   두 중대가 서로를 공격하는지 여부에 따라 '정면 전투(빨간색)' 또는 '측면 전투(파란색)' 예광탄(`tracer`)을 생성합니다.
        *   전투 중인 부대는 적 방향으로 자신의 진형 방향(`direction`)을 자동으로 전환합니다.

4.  **조직력 회복**:
    *   모든 부대의 조직력 회복을 처리합니다. `isInCombat` 상태에 따라 일반 회복률과 전투 중 회복률이 다르게 적용됩니다.

5.  **이동 및 진형 업데이트 (2단계 분리)**:
    *   **1단계 (이동 처리)**: `processUnitMovement` 함수를 통해 모든 유닛의 `updateMovement`를 먼저 실행하여 각자의 목표 지점으로 한 걸음씩 움직이게 합니다.
    *   **2단계 (진형 업데이트)**: `processFormationUpdate` 함수를 통해, 이동이 완료된 새로운 위치를 기준으로 모든 지휘 부대가 휘하 부대들의 진형을 다시 계산(`updateCombatSubUnitPositions`)하도록 합니다. 이 2단계 분리 방식은 상위 부대가 움직일 때 하위 부대가 즉시 따라오지 못하던 문제를 해결합니다.

---

#### **보조 함수**

*   **`processUnitMovement(unit, deltaTime)`**: 모든 유닛의 이동 로직을 재귀적으로 호출합니다.

*   **`processFormationUpdate(unit)`**: 모든 유닛의 진형 업데이트 로직을 재귀적으로 호출합니다.

*   **`cleanupDestroyedUnits(topLevelUnits, selectedUnit)`**:
    *   내구력(`currentStrength`)이 0 이하가 된 부대를 게임 월드에서 제거하는 역할을 합니다. 만약 선택된 유닛이 파괴되면 선택 상태도 해제합니다.

---

요약하자면, `unitLogic.js`는 **부대들의 자율적인 행동(AI)을 구현**하는 파일입니다. 플레이어의 명령(이동)을 기반으로 하되, 적을 만나면 스스로 판단하여 전투 대형을 갖추고 교전하며, 전투가 끝나면 조직력을 회복하는 등 살아있는 부대처럼 행동하게 만드는 모든 로직이 여기에 집중되어 있습니다.