### `unitEchelons.js` 파일 기능 설명

이 파일은 `unitBase.js`의 `Unit` 클래스를 확장하여, 게임에 등장하는 구체적인 부대 규모(Echelon) 클래스들을 정의합니다. 특히 하위 부대를 지휘하는 **지휘 부대(CommandUnit)**의 복잡한 진형 및 이동 로직이 이곳에 집중되어 있습니다.

---

#### **`CommandUnit` 클래스 (사단, 여단, 연대, 대대의 부모 클래스)**

*   **역할**: `Division`, `Brigade`, `Regiment`, `Battalion`의 공통 로직을 담는 부모 클래스입니다.
*   **위치**: 자신의 실제 위치를 갖지 않고, 항상 휘하의 `hqUnit`(본부 중대)의 위치를 자신의 위치로 삼습니다.
*   **이동 (`moveTo`, `updateMovement`)**: 지휘 부대에 이동 명령을 내리면, `destination` 속성에 목표 지점을 저장하고 이동 방향(`direction`)을 설정합니다. `updateMovement` 메서드는 이 목표 지점을 본부 중대(`hqUnit`)의 `destination`으로 전달하는 역할만 합니다. 실제 모든 유닛의 이동은 `unitLogic.js`의 메인 루프에서 일괄적으로 처리됩니다.
*   **진형 시스템 (`updateCombatSubUnitPositions`)**:
    *   **기본 진형 (`base` 모드)**: 휘하 부대들을 역할(`role`)에 따라 정해진 위치로 자동 배치합니다. 상위 부대의 `direction`이 변경되면, 하위 부대들의 방향도 함께 갱신되어 진형 전체가 회전합니다.
    *   **커스텀 진형 (`custom` 모드)**: 플레이어가 하위 부대(예: 대대)를 직접 움직이면, 이 모드로 전환됩니다. 이 모드에서는 더 이상 자동 진형 배치를 하지 않고, 사용자가 지정한 상대적 배치를 유지한 채로 상위 부대를 따라 움직입니다.
*   **진형 관리 메서드**:
    *   `moveTo(...)`: 하위 부대가 직접 이동 명령을 받으면, 부모의 `formationMode`를 'custom'으로 변경하고, 그 시점의 모든 형제 부대들의 상대 위치를 `relativePosition`에 기록합니다.
    *   `resetFormation()`: `formationMode`를 다시 'base'로 되돌리고, 저장된 모든 `relativePosition` 정보를 삭제하여 기본 진형으로 복귀시킵니다.

---

#### **구체적인 부대 규모 클래스**

*   **`Division`, `Brigade`, `Regiment`, `Battalion`**:
    *   모두 `CommandUnit`을 상속받으며, 대부분의 로직을 공유합니다.
    *   각 클래스는 `drawEchelonSymbol` 메서드를 오버라이드하여 자신의 규모에 맞는 고유한 군대 기호(XX, X, ||| 등)를 그리는 역할만 합니다.

*   **`Company` (중대) 클래스**:
    *   **역할**: 이 게임의 핵심적인 **전투 수행 단위**입니다. 모든 공격, 방어, 피해 계산은 중대를 기준으로 이루어집니다. 또한, 상위 부대의 본부(`HQ`) 역할을 수행할 수 있습니다.
    *   **속성**: `role` 속성을 통해 '본부', '선발대', '지원대', '유지대' 등 부대 내에서의 역할을 부여받습니다. 이 역할에 따라 진형 내 위치가 결정됩니다.
    *   **이동**: 상위 부대의 지휘를 받을 때는 진형 위치를 따라가고, 독립적으로 운용되거나 전투 시에는 자체적으로 목표를 향해 이동합니다.
    *   **시각적 표현 (`drawEchelonSymbol`)**: 부대 아이콘 위에 중대를 상징하는 '|' 기호를 그립니다.

*   **`Platoon` (소대) 클래스**:
    *   **역할**: 여러 분대를 관리하는 하위 제대입니다. 게임 내에서 직접적인 전투 단위로 취급되지는 않으며, 주로 중대를 구성하는 중간 관리자 역할을 합니다.
    *   **시각적 표현 (`drawEchelonSymbol`)**: 부대 아이콘 위에 소대를 상징하는 점 3개(●●●)를 그립니다.

*   **`Squad` (분대) 클래스**:
    *   **역할**: 게임 내 가장 작은 부대 단위입니다. 모든 상위 부대의 능력치는 결국 분대들의 능력치(화력, 장갑 등)가 합산되어 결정됩니다.
    *   **타입 설정 (`setType`)**: `setType` 메서드를 통해 '보병', '기갑', '정찰' 등 분대의 병종을 설정할 수 있습니다. 병종에 따라 `unitConstants.js`에 정의된 고유 능력치를 부여받습니다.
    *   **시각적 표현 (`drawEchelonSymbol`)**: 부대 아이콘 위에 분대를 상징하는 점 1개(●)를 그립니다.

---

요약하자면, `unitEchelons.js`는 **부대의 규모별 특징과 복잡한 지휘 및 진형 시스템을 구현**하는 파일입니다. 특히 `CommandUnit` 클래스는 지휘 부대의 유기적인 움직임을 만드는 핵심적인 역할을 담당합니다.