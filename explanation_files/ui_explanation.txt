### `ui.js` 파일 기능 설명

이 파일은 게임의 사용자 인터페이스(UI)와 관련된 모든 기능을 담당합니다. HTML 요소를 동적으로 생성하고 관리하여, 사용자가 게임과 상호작용할 수 있는 창구를 제공합니다.

---

#### **`GameUI` 클래스의 주요 기능**

1.  **초기화 (`constructor`)**
    *   `main.js`에서 생성될 때, 게임의 `camera`와 `topLevelUnits` 배열에 대한 참조를 전달받습니다.
    *   `createControlPanel()` 메서드를 호출하여 부대 생성 패널을 만듭니다.
    *   선택된 부대의 정보를 표시할 `compositionPanel`(부대 구성 패널) DOM 요소를 생성하고 초기에는 보이지 않도록 설정합니다.

2.  **컨트롤 패널 생성 (`createControlPanel`)**
    *   화면 좌측 상단에 '유닛 소환' 패널을 생성합니다.
    *   **팀 선택 드롭다운**: '블루' 또는 '레드' 팀을 선택할 수 있는 `<select>` 요소를 만듭니다.
    *   **부대 설계 드롭다운**: `division_templates.js`에 정의된 모든 부대 템플릿의 목록을 동적으로 읽어와 `<select>` 요소의 옵션으로 채웁니다. 이를 통해 새로운 부대 편제를 추가해도 UI 코드를 수정할 필요가 없습니다.
    *   **소환 버튼**: 클릭 시 `spawnUnit()` 메서드를 호출하는 `<button>`을 생성합니다.
    *   **진형 복귀 버튼**: 지휘 부대를 선택했을 때만 나타나는 '기본 진형으로 복귀' 버튼을 포함합니다.

3.  **부대 소환 (`spawnUnit`)**
    *   '소환' 버튼이 클릭되면 실행됩니다.
    *   컨트롤 패널에서 현재 선택된 팀과 부대 설계(템플릿) 값을 가져옵니다.
    *   카메라의 현재 화면 중앙 위치를 월드 좌표로 변환하여 부대가 생성될 위치를 결정합니다.
    *   선택된 템플릿의 `build` 함수를 호출하여 새로운 부대 인스턴스를 생성합니다.
    *   생성된 부대를 `main.js`의 `topLevelUnits` 배열에 추가하여 게임 월드에 등장시킵니다.

4.  **부대 구성 정보 패널 업데이트 (`updateCompositionPanel`)**
    *   `main.js`에서 사용자가 부대를 클릭하여 `selectedUnit`이 변경될 때마다 호출됩니다.
    *   **선택된 부대가 없을 경우**: 패널을 숨깁니다.
    *   **선택된 부대가 있을 경우**:
        *   선택된 부대가 지휘 부대(`CommandUnit`)이면 '기본 진형으로 복귀' 버튼을 표시합니다.
        *   선택된 부대와 그 하위의 모든 부대를 순회하며, 병과(`type`)별 분대(Squad)의 수를 집계합니다.
        *   집계된 정보를 바탕으로 "보병: 5", "기갑: 2" 와 같은 형태의 HTML 목록을 생성합니다.
        *   생성된 HTML을 패널의 내용으로 채우고 패널을 화면에 보이도록 설정합니다.

---

요약하자면, `ui.js`는 **게임의 로직과 사용자의 입/출력을 분리**하는 역할을 합니다. 게임의 핵심 데이터(`division_templates`, `selectedUnit` 등)를 기반으로 사용자에게 정보를 시각적으로 보여주고, 사용자의 입력(버튼 클릭 등)을 받아 게임 로직(`spawnUnit`)을 실행하도록 연결해주는 '중재자'입니다.