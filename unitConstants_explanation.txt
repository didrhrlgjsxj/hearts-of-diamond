### `unitConstants.js` 파일 기능 설명

이 파일은 게임의 핵심 로직과 데이터를 분리하는 중요한 역할을 합니다. 클래스나 복잡한 로직 없이, 게임에 사용되는 모든 부대의 종류, 능력치, 역할, 진형 등과 관련된 '설정값'들을 상수(Constant)로 모아놓은 데이터베이스입니다.

이 파일을 수정하는 것만으로도 게임 밸런스를 조정하거나 새로운 유닛 타입을 쉽게 추가할 수 있습니다.

---

#### **주요 상수(Constants)와 역할**

1.  **`UNIT_STRENGTHS`**
    *   **역할**: 부대 규모(분대, 소대 등)별 기본 병력 수를 정의합니다. 예를 들어, `SQUAD`는 12명으로 설정되어 있습니다.

2.  **`UNIT_TYPES`**
    *   **역할**: 게임에 등장하는 병과(보병, 기갑, 정찰 등)의 이름을 문자열로 정의합니다. 코드 내에서 병과를 일관되게 참조하기 위해 사용됩니다.

3.  **`UNIT_TYPE_ICONS`**
    *   **역할**: 각 병과(`UNIT_TYPES`)에 해당하는 NATO 군대 기호(APP-6A)를 문자로 매핑합니다. 예를 들어, 보병은 '✕' 기호로 표시됩니다.

4.  **`UNIT_TYPE_COLORS`**
    *   **역할**: 각 병과별로 고유한 색상을 정의합니다. (현재 코드에서는 사용되지 않고 있으나, 향후 병과별 시각적 구분을 위해 활용될 수 있습니다.)

5.  **`UNIT_TYPE_STATS`**
    *   **역할**: **게임 밸런스의 핵심**입니다. 각 병과(분대 기준)의 기본 능력치를 상세하게 정의합니다.
    *   **포함된 능력치**: `firepower`(화력), `softAttack`(대인 공격력), `hardAttack`(대물 공격력), `reconnaissance`(정찰력), `armor`(장갑), `organizationBonus`(조직력 보너스) 등 전투에 필요한 모든 수치가 포함됩니다.

6.  **`COMPANY_ROLES`**
    *   **역할**: 상위 부대 내에서 중대가 맡을 수 있는 역할('본부', '정찰대', '타격대' 등)을 정의합니다.

7.  **`FORMATION_OFFSETS`**
    *   **역할**: 각 중대 역할(`COMPANY_ROLES`)에 따라 본부(HQ)를 기준으로 얼마나 떨어져서, 얼마나 넓게 배치될지를 결정하는 진형(Formation) 데이터를 정의합니다. `distance`는 본부와의 거리, `spread`는 같은 역할을 맡은 중대들 사이의 간격을 의미합니다.

---

요약하자면, `unitConstants.js`는 **게임의 모든 수치와 데이터를 중앙에서 관리**하는 설정 파일입니다. 코드의 다른 부분들은 이곳에 정의된 값을 가져다 사용함으로써, 게임의 유연성과 유지보수성을 크게 향상시킵니다.